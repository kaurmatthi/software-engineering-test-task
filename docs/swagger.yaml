definitions:
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.User:
    properties:
      email:
        type: string
      full_name:
        type: string
      id:
        type: integer
      username:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
info:
  contact: {}
  description: This is a CRUD API for users.
  title: Users API
  version: "1.0"
paths:
  /users:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.User'
            type: array
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all users
      tags:
      - users
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: invalid request body
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "409":
          description: user with username/email already exists
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new user
      tags:
      - users
  /users/{id}:
    delete:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: invalid id
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete user by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: invalid id or body mismatch
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "409":
          description: user with username/email already exists
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update user by ID
      tags:
      - users
  /users/id/{id}:
    get:
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "400":
          description: invalid id
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by ID
      tags:
      - users
  /users/username/{username}:
    get:
      parameters:
      - description: Username
        in: path
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.User'
        "404":
          description: user not found
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: internal server error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get user by username
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: X-Api-Key
    type: apiKey
swagger: "2.0"
